services:
  # Jaeger all-in-one for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:1.60
    container_name: agenthub-jaeger
    ports:
      - "${JAEGER_UI_PORT:-16686}:16686"   # Jaeger UI
      - "${JAEGER_OTLP_PORT:-4317}:4317"   # OTLP gRPC receiver
      - "4318:4318"                        # OTLP HTTP receiver
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - agenthub-observability

  # OpenTelemetry Collector (optional - can be bypassed)
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: agenthub-otel-collector
    command: ["--config=/etc/otel-collector.yml"]
    volumes:
      - ./otel-collector/otel-collector.yml:/etc/otel-collector.yml
    ports:
      - "${OTLP_GRPC_PORT:-4320}:4317"     # OTLP gRPC receiver (alternative to direct Jaeger)
      - "${OTLP_HTTP_PORT:-4321}:4318"     # OTLP HTTP receiver (alternative to direct Jaeger)
      - "8888:8888"                        # Prometheus metrics
      - "8889:8889"                        # Prometheus exporter metrics
    depends_on:
      - jaeger
      - prometheus
    networks:
      - agenthub-observability

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: agenthub-prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=30d"
      - "--web.enable-lifecycle"
    ports:
      - "${PROMETHEUS_PORT:-9090}:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    networks:
      - agenthub-observability

  # Grafana for visualization and dashboards
  grafana:
    image: grafana/grafana:10.0.0
    container_name: agenthub-grafana
    ports:
      - "${GRAFANA_PORT:-3333}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - agenthub-observability

  # AlertManager for alerting
  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: agenthub-alertmanager
    ports:
      - "${ALERTMANAGER_PORT:-9093}:9093"
    volumes:
      - ./prometheus/alertmanager.yml:/etc/alertmanager/alertmanager.yml
      - alertmanager_data:/alertmanager
    networks:
      - agenthub-observability

  # Node Exporter for system metrics
  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: agenthub-node-exporter
    ports:
      - "9100:9100"
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    networks:
      - agenthub-observability

volumes:
  prometheus_data:
  grafana_data:
  alertmanager_data:

networks:
  agenthub-observability:
    driver: bridge