// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: proto/eventbus.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Priority levels for tasks
type Priority int32

const (
	Priority_PRIORITY_UNSPECIFIED Priority = 0
	Priority_PRIORITY_LOW         Priority = 1
	Priority_PRIORITY_MEDIUM      Priority = 2
	Priority_PRIORITY_HIGH        Priority = 3
	Priority_PRIORITY_CRITICAL    Priority = 4
)

// Enum value maps for Priority.
var (
	Priority_name = map[int32]string{
		0: "PRIORITY_UNSPECIFIED",
		1: "PRIORITY_LOW",
		2: "PRIORITY_MEDIUM",
		3: "PRIORITY_HIGH",
		4: "PRIORITY_CRITICAL",
	}
	Priority_value = map[string]int32{
		"PRIORITY_UNSPECIFIED": 0,
		"PRIORITY_LOW":         1,
		"PRIORITY_MEDIUM":      2,
		"PRIORITY_HIGH":        3,
		"PRIORITY_CRITICAL":    4,
	}
)

func (x Priority) Enum() *Priority {
	p := new(Priority)
	*p = x
	return p
}

func (x Priority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Priority) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_eventbus_proto_enumTypes[0].Descriptor()
}

func (Priority) Type() protoreflect.EnumType {
	return &file_proto_eventbus_proto_enumTypes[0]
}

func (x Priority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Priority.Descriptor instead.
func (Priority) EnumDescriptor() ([]byte, []int) {
	return file_proto_eventbus_proto_rawDescGZIP(), []int{0}
}

// Task status for tracking progress
type TaskStatus int32

const (
	TaskStatus_TASK_STATUS_UNSPECIFIED TaskStatus = 0
	TaskStatus_TASK_STATUS_PENDING     TaskStatus = 1
	TaskStatus_TASK_STATUS_IN_PROGRESS TaskStatus = 2
	TaskStatus_TASK_STATUS_COMPLETED   TaskStatus = 3
	TaskStatus_TASK_STATUS_FAILED      TaskStatus = 4
	TaskStatus_TASK_STATUS_CANCELLED   TaskStatus = 5
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNSPECIFIED",
		1: "TASK_STATUS_PENDING",
		2: "TASK_STATUS_IN_PROGRESS",
		3: "TASK_STATUS_COMPLETED",
		4: "TASK_STATUS_FAILED",
		5: "TASK_STATUS_CANCELLED",
	}
	TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNSPECIFIED": 0,
		"TASK_STATUS_PENDING":     1,
		"TASK_STATUS_IN_PROGRESS": 2,
		"TASK_STATUS_COMPLETED":   3,
		"TASK_STATUS_FAILED":      4,
		"TASK_STATUS_CANCELLED":   5,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_eventbus_proto_enumTypes[1].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_proto_eventbus_proto_enumTypes[1]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_eventbus_proto_rawDescGZIP(), []int{1}
}

// Task Message following Agent2Agent protocol structure
type TaskMessage struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TaskId           string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                                 // Unique identifier
	TaskType         string                 `protobuf:"bytes,2,opt,name=task_type,json=taskType,proto3" json:"task_type,omitempty"`                           // Type of task (e.g., "data_analysis", "image_generation")
	Parameters       *structpb.Struct       `protobuf:"bytes,3,opt,name=parameters,proto3" json:"parameters,omitempty"`                                       // Task parameters as flexible JSON-like structure
	RequesterAgentId string                 `protobuf:"bytes,4,opt,name=requester_agent_id,json=requesterAgentId,proto3" json:"requester_agent_id,omitempty"` // ID of requesting agent
	ResponderAgentId string                 `protobuf:"bytes,5,opt,name=responder_agent_id,json=responderAgentId,proto3" json:"responder_agent_id,omitempty"` // ID of target agent (optional)
	Deadline         *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=deadline,proto3" json:"deadline,omitempty"`                                           // Optional deadline
	Priority         Priority               `protobuf:"varint,7,opt,name=priority,proto3,enum=eventbus.Priority" json:"priority,omitempty"`                   // Task priority
	Metadata         *structpb.Struct       `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`                                           // Optional additional metadata
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                        // When task was created
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *TaskMessage) Reset() {
	*x = TaskMessage{}
	mi := &file_proto_eventbus_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskMessage) ProtoMessage() {}

func (x *TaskMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventbus_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskMessage.ProtoReflect.Descriptor instead.
func (*TaskMessage) Descriptor() ([]byte, []int) {
	return file_proto_eventbus_proto_rawDescGZIP(), []int{0}
}

func (x *TaskMessage) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskMessage) GetTaskType() string {
	if x != nil {
		return x.TaskType
	}
	return ""
}

func (x *TaskMessage) GetParameters() *structpb.Struct {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (x *TaskMessage) GetRequesterAgentId() string {
	if x != nil {
		return x.RequesterAgentId
	}
	return ""
}

func (x *TaskMessage) GetResponderAgentId() string {
	if x != nil {
		return x.ResponderAgentId
	}
	return ""
}

func (x *TaskMessage) GetDeadline() *timestamppb.Timestamp {
	if x != nil {
		return x.Deadline
	}
	return nil
}

func (x *TaskMessage) GetPriority() Priority {
	if x != nil {
		return x.Priority
	}
	return Priority_PRIORITY_UNSPECIFIED
}

func (x *TaskMessage) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TaskMessage) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

// Task Result for task completion responses
type TaskResult struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	TaskId            string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                                  // Reference to original task
	Status            TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=eventbus.TaskStatus" json:"status,omitempty"`                      // Final status
	Result            *structpb.Struct       `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"`                                                // Task results as flexible structure
	ErrorMessage      string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                // Error details if failed
	ExecutorAgentId   string                 `protobuf:"bytes,5,opt,name=executor_agent_id,json=executorAgentId,proto3" json:"executor_agent_id,omitempty"`     // ID of agent that executed the task
	CompletedAt       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=completed_at,json=completedAt,proto3" json:"completed_at,omitempty"`                   // When task was completed
	ExecutionMetadata *structpb.Struct       `protobuf:"bytes,7,opt,name=execution_metadata,json=executionMetadata,proto3" json:"execution_metadata,omitempty"` // Optional execution details
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *TaskResult) Reset() {
	*x = TaskResult{}
	mi := &file_proto_eventbus_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskResult) ProtoMessage() {}

func (x *TaskResult) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventbus_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskResult.ProtoReflect.Descriptor instead.
func (*TaskResult) Descriptor() ([]byte, []int) {
	return file_proto_eventbus_proto_rawDescGZIP(), []int{1}
}

func (x *TaskResult) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskResult) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskResult) GetResult() *structpb.Struct {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *TaskResult) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *TaskResult) GetExecutorAgentId() string {
	if x != nil {
		return x.ExecutorAgentId
	}
	return ""
}

func (x *TaskResult) GetCompletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CompletedAt
	}
	return nil
}

func (x *TaskResult) GetExecutionMetadata() *structpb.Struct {
	if x != nil {
		return x.ExecutionMetadata
	}
	return nil
}

// Task Progress for status updates during execution
type TaskProgress struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TaskId             string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`                                      // Reference to original task
	Status             TaskStatus             `protobuf:"varint,2,opt,name=status,proto3,enum=eventbus.TaskStatus" json:"status,omitempty"`                          // Current status
	ProgressMessage    string                 `protobuf:"bytes,3,opt,name=progress_message,json=progressMessage,proto3" json:"progress_message,omitempty"`           // Human-readable progress description
	ProgressPercentage int32                  `protobuf:"varint,4,opt,name=progress_percentage,json=progressPercentage,proto3" json:"progress_percentage,omitempty"` // Progress as percentage (0-100)
	ProgressData       *structpb.Struct       `protobuf:"bytes,5,opt,name=progress_data,json=progressData,proto3" json:"progress_data,omitempty"`                    // Optional structured progress data
	ExecutorAgentId    string                 `protobuf:"bytes,6,opt,name=executor_agent_id,json=executorAgentId,proto3" json:"executor_agent_id,omitempty"`         // ID of agent executing the task
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                             // When this progress was reported
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *TaskProgress) Reset() {
	*x = TaskProgress{}
	mi := &file_proto_eventbus_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskProgress) ProtoMessage() {}

func (x *TaskProgress) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventbus_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskProgress.ProtoReflect.Descriptor instead.
func (*TaskProgress) Descriptor() ([]byte, []int) {
	return file_proto_eventbus_proto_rawDescGZIP(), []int{2}
}

func (x *TaskProgress) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskProgress) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *TaskProgress) GetProgressMessage() string {
	if x != nil {
		return x.ProgressMessage
	}
	return ""
}

func (x *TaskProgress) GetProgressPercentage() int32 {
	if x != nil {
		return x.ProgressPercentage
	}
	return 0
}

func (x *TaskProgress) GetProgressData() *structpb.Struct {
	if x != nil {
		return x.ProgressData
	}
	return nil
}

func (x *TaskProgress) GetExecutorAgentId() string {
	if x != nil {
		return x.ExecutorAgentId
	}
	return ""
}

func (x *TaskProgress) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Response for publishing requests
type PublishResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishResponse) Reset() {
	*x = PublishResponse{}
	mi := &file_proto_eventbus_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishResponse) ProtoMessage() {}

func (x *PublishResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventbus_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishResponse.ProtoReflect.Descriptor instead.
func (*PublishResponse) Descriptor() ([]byte, []int) {
	return file_proto_eventbus_proto_rawDescGZIP(), []int{3}
}

func (x *PublishResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *PublishResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// Request for publishing a task
type PublishTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *TaskMessage           `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishTaskRequest) Reset() {
	*x = PublishTaskRequest{}
	mi := &file_proto_eventbus_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishTaskRequest) ProtoMessage() {}

func (x *PublishTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventbus_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishTaskRequest.ProtoReflect.Descriptor instead.
func (*PublishTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_eventbus_proto_rawDescGZIP(), []int{4}
}

func (x *PublishTaskRequest) GetTask() *TaskMessage {
	if x != nil {
		return x.Task
	}
	return nil
}

// Request for publishing a task result
type PublishTaskResultRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        *TaskResult            `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishTaskResultRequest) Reset() {
	*x = PublishTaskResultRequest{}
	mi := &file_proto_eventbus_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishTaskResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishTaskResultRequest) ProtoMessage() {}

func (x *PublishTaskResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventbus_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishTaskResultRequest.ProtoReflect.Descriptor instead.
func (*PublishTaskResultRequest) Descriptor() ([]byte, []int) {
	return file_proto_eventbus_proto_rawDescGZIP(), []int{5}
}

func (x *PublishTaskResultRequest) GetResult() *TaskResult {
	if x != nil {
		return x.Result
	}
	return nil
}

// Request for publishing task progress
type PublishTaskProgressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Progress      *TaskProgress          `protobuf:"bytes,1,opt,name=progress,proto3" json:"progress,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishTaskProgressRequest) Reset() {
	*x = PublishTaskProgressRequest{}
	mi := &file_proto_eventbus_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishTaskProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishTaskProgressRequest) ProtoMessage() {}

func (x *PublishTaskProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventbus_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishTaskProgressRequest.ProtoReflect.Descriptor instead.
func (*PublishTaskProgressRequest) Descriptor() ([]byte, []int) {
	return file_proto_eventbus_proto_rawDescGZIP(), []int{6}
}

func (x *PublishTaskProgressRequest) GetProgress() *TaskProgress {
	if x != nil {
		return x.Progress
	}
	return nil
}

// Request for subscribing to tasks for a specific agent
type SubscribeToTasksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`       // Agent ID to receive tasks for
	TaskTypes     []string               `protobuf:"bytes,2,rep,name=task_types,json=taskTypes,proto3" json:"task_types,omitempty"` // Optional: filter by task types
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeToTasksRequest) Reset() {
	*x = SubscribeToTasksRequest{}
	mi := &file_proto_eventbus_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToTasksRequest) ProtoMessage() {}

func (x *SubscribeToTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventbus_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToTasksRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToTasksRequest) Descriptor() ([]byte, []int) {
	return file_proto_eventbus_proto_rawDescGZIP(), []int{7}
}

func (x *SubscribeToTasksRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *SubscribeToTasksRequest) GetTaskTypes() []string {
	if x != nil {
		return x.TaskTypes
	}
	return nil
}

// Request for subscribing to task results
type SubscribeToTaskResultsRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RequesterAgentId string                 `protobuf:"bytes,1,opt,name=requester_agent_id,json=requesterAgentId,proto3" json:"requester_agent_id,omitempty"` // Agent ID that requested tasks
	TaskIds          []string               `protobuf:"bytes,2,rep,name=task_ids,json=taskIds,proto3" json:"task_ids,omitempty"`                              // Optional: filter by specific task IDs
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SubscribeToTaskResultsRequest) Reset() {
	*x = SubscribeToTaskResultsRequest{}
	mi := &file_proto_eventbus_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeToTaskResultsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeToTaskResultsRequest) ProtoMessage() {}

func (x *SubscribeToTaskResultsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_eventbus_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeToTaskResultsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeToTaskResultsRequest) Descriptor() ([]byte, []int) {
	return file_proto_eventbus_proto_rawDescGZIP(), []int{8}
}

func (x *SubscribeToTaskResultsRequest) GetRequesterAgentId() string {
	if x != nil {
		return x.RequesterAgentId
	}
	return ""
}

func (x *SubscribeToTaskResultsRequest) GetTaskIds() []string {
	if x != nil {
		return x.TaskIds
	}
	return nil
}

var File_proto_eventbus_proto protoreflect.FileDescriptor

const file_proto_eventbus_proto_rawDesc = "" +
	"\n" +
	"\x14proto/eventbus.proto\x12\beventbus\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xb0\x03\n" +
	"\vTaskMessage\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\ttask_type\x18\x02 \x01(\tR\btaskType\x127\n" +
	"\n" +
	"parameters\x18\x03 \x01(\v2\x17.google.protobuf.StructR\n" +
	"parameters\x12,\n" +
	"\x12requester_agent_id\x18\x04 \x01(\tR\x10requesterAgentId\x12,\n" +
	"\x12responder_agent_id\x18\x05 \x01(\tR\x10responderAgentId\x126\n" +
	"\bdeadline\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\bdeadline\x12.\n" +
	"\bpriority\x18\a \x01(\x0e2\x12.eventbus.PriorityR\bpriority\x123\n" +
	"\bmetadata\x18\b \x01(\v2\x17.google.protobuf.StructR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\xdc\x02\n" +
	"\n" +
	"TaskResult\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12,\n" +
	"\x06status\x18\x02 \x01(\x0e2\x14.eventbus.TaskStatusR\x06status\x12/\n" +
	"\x06result\x18\x03 \x01(\v2\x17.google.protobuf.StructR\x06result\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12*\n" +
	"\x11executor_agent_id\x18\x05 \x01(\tR\x0fexecutorAgentId\x12=\n" +
	"\fcompleted_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vcompletedAt\x12F\n" +
	"\x12execution_metadata\x18\a \x01(\v2\x17.google.protobuf.StructR\x11executionMetadata\"\xd6\x02\n" +
	"\fTaskProgress\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12,\n" +
	"\x06status\x18\x02 \x01(\x0e2\x14.eventbus.TaskStatusR\x06status\x12)\n" +
	"\x10progress_message\x18\x03 \x01(\tR\x0fprogressMessage\x12/\n" +
	"\x13progress_percentage\x18\x04 \x01(\x05R\x12progressPercentage\x12<\n" +
	"\rprogress_data\x18\x05 \x01(\v2\x17.google.protobuf.StructR\fprogressData\x12*\n" +
	"\x11executor_agent_id\x18\x06 \x01(\tR\x0fexecutorAgentId\x129\n" +
	"\n" +
	"updated_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"A\n" +
	"\x0fPublishResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"?\n" +
	"\x12PublishTaskRequest\x12)\n" +
	"\x04task\x18\x01 \x01(\v2\x15.eventbus.TaskMessageR\x04task\"H\n" +
	"\x18PublishTaskResultRequest\x12,\n" +
	"\x06result\x18\x01 \x01(\v2\x14.eventbus.TaskResultR\x06result\"P\n" +
	"\x1aPublishTaskProgressRequest\x122\n" +
	"\bprogress\x18\x01 \x01(\v2\x16.eventbus.TaskProgressR\bprogress\"S\n" +
	"\x17SubscribeToTasksRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1d\n" +
	"\n" +
	"task_types\x18\x02 \x03(\tR\ttaskTypes\"h\n" +
	"\x1dSubscribeToTaskResultsRequest\x12,\n" +
	"\x12requester_agent_id\x18\x01 \x01(\tR\x10requesterAgentId\x12\x19\n" +
	"\btask_ids\x18\x02 \x03(\tR\ataskIds*u\n" +
	"\bPriority\x12\x18\n" +
	"\x14PRIORITY_UNSPECIFIED\x10\x00\x12\x10\n" +
	"\fPRIORITY_LOW\x10\x01\x12\x13\n" +
	"\x0fPRIORITY_MEDIUM\x10\x02\x12\x11\n" +
	"\rPRIORITY_HIGH\x10\x03\x12\x15\n" +
	"\x11PRIORITY_CRITICAL\x10\x04*\xad\x01\n" +
	"\n" +
	"TaskStatus\x12\x1b\n" +
	"\x17TASK_STATUS_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13TASK_STATUS_PENDING\x10\x01\x12\x1b\n" +
	"\x17TASK_STATUS_IN_PROGRESS\x10\x02\x12\x19\n" +
	"\x15TASK_STATUS_COMPLETED\x10\x03\x12\x16\n" +
	"\x12TASK_STATUS_FAILED\x10\x04\x12\x19\n" +
	"\x15TASK_STATUS_CANCELLED\x10\x052\x87\x04\n" +
	"\bEventBus\x12F\n" +
	"\vPublishTask\x12\x1c.eventbus.PublishTaskRequest\x1a\x19.eventbus.PublishResponse\x12R\n" +
	"\x11PublishTaskResult\x12\".eventbus.PublishTaskResultRequest\x1a\x19.eventbus.PublishResponse\x12V\n" +
	"\x13PublishTaskProgress\x12$.eventbus.PublishTaskProgressRequest\x1a\x19.eventbus.PublishResponse\x12N\n" +
	"\x10SubscribeToTasks\x12!.eventbus.SubscribeToTasksRequest\x1a\x15.eventbus.TaskMessage0\x01\x12Y\n" +
	"\x16SubscribeToTaskResults\x12'.eventbus.SubscribeToTaskResultsRequest\x1a\x14.eventbus.TaskResult0\x01\x12\\\n" +
	"\x17SubscribeToTaskProgress\x12'.eventbus.SubscribeToTaskResultsRequest\x1a\x16.eventbus.TaskProgress0\x01B9Z7github.com/owulveryck/agenthub/broker/internal/grpc;pbb\x06proto3"

var (
	file_proto_eventbus_proto_rawDescOnce sync.Once
	file_proto_eventbus_proto_rawDescData []byte
)

func file_proto_eventbus_proto_rawDescGZIP() []byte {
	file_proto_eventbus_proto_rawDescOnce.Do(func() {
		file_proto_eventbus_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_eventbus_proto_rawDesc), len(file_proto_eventbus_proto_rawDesc)))
	})
	return file_proto_eventbus_proto_rawDescData
}

var file_proto_eventbus_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_eventbus_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_eventbus_proto_goTypes = []any{
	(Priority)(0),                         // 0: eventbus.Priority
	(TaskStatus)(0),                       // 1: eventbus.TaskStatus
	(*TaskMessage)(nil),                   // 2: eventbus.TaskMessage
	(*TaskResult)(nil),                    // 3: eventbus.TaskResult
	(*TaskProgress)(nil),                  // 4: eventbus.TaskProgress
	(*PublishResponse)(nil),               // 5: eventbus.PublishResponse
	(*PublishTaskRequest)(nil),            // 6: eventbus.PublishTaskRequest
	(*PublishTaskResultRequest)(nil),      // 7: eventbus.PublishTaskResultRequest
	(*PublishTaskProgressRequest)(nil),    // 8: eventbus.PublishTaskProgressRequest
	(*SubscribeToTasksRequest)(nil),       // 9: eventbus.SubscribeToTasksRequest
	(*SubscribeToTaskResultsRequest)(nil), // 10: eventbus.SubscribeToTaskResultsRequest
	(*structpb.Struct)(nil),               // 11: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil),         // 12: google.protobuf.Timestamp
}
var file_proto_eventbus_proto_depIdxs = []int32{
	11, // 0: eventbus.TaskMessage.parameters:type_name -> google.protobuf.Struct
	12, // 1: eventbus.TaskMessage.deadline:type_name -> google.protobuf.Timestamp
	0,  // 2: eventbus.TaskMessage.priority:type_name -> eventbus.Priority
	11, // 3: eventbus.TaskMessage.metadata:type_name -> google.protobuf.Struct
	12, // 4: eventbus.TaskMessage.created_at:type_name -> google.protobuf.Timestamp
	1,  // 5: eventbus.TaskResult.status:type_name -> eventbus.TaskStatus
	11, // 6: eventbus.TaskResult.result:type_name -> google.protobuf.Struct
	12, // 7: eventbus.TaskResult.completed_at:type_name -> google.protobuf.Timestamp
	11, // 8: eventbus.TaskResult.execution_metadata:type_name -> google.protobuf.Struct
	1,  // 9: eventbus.TaskProgress.status:type_name -> eventbus.TaskStatus
	11, // 10: eventbus.TaskProgress.progress_data:type_name -> google.protobuf.Struct
	12, // 11: eventbus.TaskProgress.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 12: eventbus.PublishTaskRequest.task:type_name -> eventbus.TaskMessage
	3,  // 13: eventbus.PublishTaskResultRequest.result:type_name -> eventbus.TaskResult
	4,  // 14: eventbus.PublishTaskProgressRequest.progress:type_name -> eventbus.TaskProgress
	6,  // 15: eventbus.EventBus.PublishTask:input_type -> eventbus.PublishTaskRequest
	7,  // 16: eventbus.EventBus.PublishTaskResult:input_type -> eventbus.PublishTaskResultRequest
	8,  // 17: eventbus.EventBus.PublishTaskProgress:input_type -> eventbus.PublishTaskProgressRequest
	9,  // 18: eventbus.EventBus.SubscribeToTasks:input_type -> eventbus.SubscribeToTasksRequest
	10, // 19: eventbus.EventBus.SubscribeToTaskResults:input_type -> eventbus.SubscribeToTaskResultsRequest
	10, // 20: eventbus.EventBus.SubscribeToTaskProgress:input_type -> eventbus.SubscribeToTaskResultsRequest
	5,  // 21: eventbus.EventBus.PublishTask:output_type -> eventbus.PublishResponse
	5,  // 22: eventbus.EventBus.PublishTaskResult:output_type -> eventbus.PublishResponse
	5,  // 23: eventbus.EventBus.PublishTaskProgress:output_type -> eventbus.PublishResponse
	2,  // 24: eventbus.EventBus.SubscribeToTasks:output_type -> eventbus.TaskMessage
	3,  // 25: eventbus.EventBus.SubscribeToTaskResults:output_type -> eventbus.TaskResult
	4,  // 26: eventbus.EventBus.SubscribeToTaskProgress:output_type -> eventbus.TaskProgress
	21, // [21:27] is the sub-list for method output_type
	15, // [15:21] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_proto_eventbus_proto_init() }
func file_proto_eventbus_proto_init() {
	if File_proto_eventbus_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_eventbus_proto_rawDesc), len(file_proto_eventbus_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_eventbus_proto_goTypes,
		DependencyIndexes: file_proto_eventbus_proto_depIdxs,
		EnumInfos:         file_proto_eventbus_proto_enumTypes,
		MessageInfos:      file_proto_eventbus_proto_msgTypes,
	}.Build()
	File_proto_eventbus_proto = out.File
	file_proto_eventbus_proto_goTypes = nil
	file_proto_eventbus_proto_depIdxs = nil
}
