// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.1
// source: proto/events.proto

package observability

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Event data structure for observability as specified in eventflow.md
type EventData struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                     // Event identifier
	Type            string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                                                                 // Event type (e.g., "task.published", "task.completed")
	Source          string                 `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`                                                                             // Source service/agent name
	Subject         string                 `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`                                                                           // Event subject/description
	Time            *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=time,proto3" json:"time,omitempty"`                                                                                 // Event timestamp
	Data            *structpb.Struct       `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`                                                                                 // Event payload data
	Headers         map[string]string      `protobuf:"bytes,7,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Event headers (including trace context)
	TraceId         string                 `protobuf:"bytes,8,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`                                                            // Distributed trace ID
	SpanId          string                 `protobuf:"bytes,9,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`                                                               // Span ID within trace
	DataContentType string                 `protobuf:"bytes,10,opt,name=data_content_type,json=dataContentType,proto3" json:"data_content_type,omitempty"`                                 // Content type of data
	DataSchema      string                 `protobuf:"bytes,11,opt,name=data_schema,json=dataSchema,proto3" json:"data_schema,omitempty"`                                                  // Schema version/type
	SpecVersion     string                 `protobuf:"bytes,12,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`                                               // CloudEvents spec version
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *EventData) Reset() {
	*x = EventData{}
	mi := &file_proto_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventData) ProtoMessage() {}

func (x *EventData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventData.ProtoReflect.Descriptor instead.
func (*EventData) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{0}
}

func (x *EventData) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *EventData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *EventData) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *EventData) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *EventData) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *EventData) GetData() *structpb.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *EventData) GetHeaders() map[string]string {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *EventData) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *EventData) GetSpanId() string {
	if x != nil {
		return x.SpanId
	}
	return ""
}

func (x *EventData) GetDataContentType() string {
	if x != nil {
		return x.DataContentType
	}
	return ""
}

func (x *EventData) GetDataSchema() string {
	if x != nil {
		return x.DataSchema
	}
	return ""
}

func (x *EventData) GetSpecVersion() string {
	if x != nil {
		return x.SpecVersion
	}
	return ""
}

// Cloud Events compliant structure for interoperability
type CloudEvent struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                                           // Required: Identifies the event
	Source      string                 `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`                                                                                   // Required: Identifies the context in which an event happened
	SpecVersion string                 `protobuf:"bytes,3,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`                                                      // Required: CloudEvents specification version
	Type        string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                                                                                       // Required: Event type
	Attributes  map[string]string      `protobuf:"bytes,5,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Optional: Additional metadata
	// Types that are valid to be assigned to Data:
	//
	//	*CloudEvent_BinaryData
	//	*CloudEvent_TextData
	//	*CloudEvent_JsonData
	Data          isCloudEvent_Data `protobuf_oneof:"data"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloudEvent) Reset() {
	*x = CloudEvent{}
	mi := &file_proto_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudEvent) ProtoMessage() {}

func (x *CloudEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudEvent.ProtoReflect.Descriptor instead.
func (*CloudEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{1}
}

func (x *CloudEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloudEvent) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CloudEvent) GetSpecVersion() string {
	if x != nil {
		return x.SpecVersion
	}
	return ""
}

func (x *CloudEvent) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CloudEvent) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

func (x *CloudEvent) GetData() isCloudEvent_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CloudEvent) GetBinaryData() []byte {
	if x != nil {
		if x, ok := x.Data.(*CloudEvent_BinaryData); ok {
			return x.BinaryData
		}
	}
	return nil
}

func (x *CloudEvent) GetTextData() string {
	if x != nil {
		if x, ok := x.Data.(*CloudEvent_TextData); ok {
			return x.TextData
		}
	}
	return ""
}

func (x *CloudEvent) GetJsonData() *structpb.Struct {
	if x != nil {
		if x, ok := x.Data.(*CloudEvent_JsonData); ok {
			return x.JsonData
		}
	}
	return nil
}

type isCloudEvent_Data interface {
	isCloudEvent_Data()
}

type CloudEvent_BinaryData struct {
	BinaryData []byte `protobuf:"bytes,6,opt,name=binary_data,json=binaryData,proto3,oneof"`
}

type CloudEvent_TextData struct {
	TextData string `protobuf:"bytes,7,opt,name=text_data,json=textData,proto3,oneof"`
}

type CloudEvent_JsonData struct {
	JsonData *structpb.Struct `protobuf:"bytes,8,opt,name=json_data,json=jsonData,proto3,oneof"`
}

func (*CloudEvent_BinaryData) isCloudEvent_Data() {}

func (*CloudEvent_TextData) isCloudEvent_Data() {}

func (*CloudEvent_JsonData) isCloudEvent_Data() {}

// Log entry structure for structured logging
type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Time          *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`                                                                                        // Log timestamp
	Level         string                 `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`                                                                                      // Log level (INFO, WARN, ERROR, DEBUG)
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`                                                                                  // Log message
	TraceId       string                 `protobuf:"bytes,4,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`                                                                   // Trace context
	SpanId        string                 `protobuf:"bytes,5,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`                                                                      // Span context
	Service       string                 `protobuf:"bytes,6,opt,name=service,proto3" json:"service,omitempty"`                                                                                  // Service name
	EventId       string                 `protobuf:"bytes,7,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`                                                                   // Related event ID
	EventType     string                 `protobuf:"bytes,8,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`                                                             // Related event type
	DurationMs    int64                  `protobuf:"varint,9,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"`                                                         // Operation duration in milliseconds
	Source        string                 `protobuf:"bytes,10,opt,name=source,proto3" json:"source,omitempty"`                                                                                   // Source file:line
	Attributes    map[string]string      `protobuf:"bytes,11,rep,name=attributes,proto3" json:"attributes,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Additional log attributes
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_proto_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{2}
}

func (x *LogEntry) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *LogEntry) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogEntry) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *LogEntry) GetSpanId() string {
	if x != nil {
		return x.SpanId
	}
	return ""
}

func (x *LogEntry) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *LogEntry) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *LogEntry) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *LogEntry) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *LogEntry) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *LogEntry) GetAttributes() map[string]string {
	if x != nil {
		return x.Attributes
	}
	return nil
}

// Metric data point for custom metrics
type MetricDataPoint struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                               // Metric name
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`                                                                 // Metric description
	Unit        string                 `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit,omitempty"`                                                                               // Metric unit
	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                     // Measurement timestamp
	Labels      map[string]string      `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Metric labels/tags
	// Types that are valid to be assigned to Value:
	//
	//	*MetricDataPoint_GaugeValue
	//	*MetricDataPoint_CounterValue
	//	*MetricDataPoint_HistogramValue
	Value         isMetricDataPoint_Value `protobuf_oneof:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MetricDataPoint) Reset() {
	*x = MetricDataPoint{}
	mi := &file_proto_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MetricDataPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetricDataPoint) ProtoMessage() {}

func (x *MetricDataPoint) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetricDataPoint.ProtoReflect.Descriptor instead.
func (*MetricDataPoint) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{3}
}

func (x *MetricDataPoint) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MetricDataPoint) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *MetricDataPoint) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *MetricDataPoint) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *MetricDataPoint) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *MetricDataPoint) GetValue() isMetricDataPoint_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *MetricDataPoint) GetGaugeValue() float64 {
	if x != nil {
		if x, ok := x.Value.(*MetricDataPoint_GaugeValue); ok {
			return x.GaugeValue
		}
	}
	return 0
}

func (x *MetricDataPoint) GetCounterValue() int64 {
	if x != nil {
		if x, ok := x.Value.(*MetricDataPoint_CounterValue); ok {
			return x.CounterValue
		}
	}
	return 0
}

func (x *MetricDataPoint) GetHistogramValue() *HistogramValue {
	if x != nil {
		if x, ok := x.Value.(*MetricDataPoint_HistogramValue); ok {
			return x.HistogramValue
		}
	}
	return nil
}

type isMetricDataPoint_Value interface {
	isMetricDataPoint_Value()
}

type MetricDataPoint_GaugeValue struct {
	GaugeValue float64 `protobuf:"fixed64,6,opt,name=gauge_value,json=gaugeValue,proto3,oneof"` // Gauge metric value
}

type MetricDataPoint_CounterValue struct {
	CounterValue int64 `protobuf:"varint,7,opt,name=counter_value,json=counterValue,proto3,oneof"` // Counter metric value
}

type MetricDataPoint_HistogramValue struct {
	HistogramValue *HistogramValue `protobuf:"bytes,8,opt,name=histogram_value,json=histogramValue,proto3,oneof"` // Histogram metric value
}

func (*MetricDataPoint_GaugeValue) isMetricDataPoint_Value() {}

func (*MetricDataPoint_CounterValue) isMetricDataPoint_Value() {}

func (*MetricDataPoint_HistogramValue) isMetricDataPoint_Value() {}

// Histogram value structure
type HistogramValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`                                          // Number of observations
	Sum           float64                `protobuf:"fixed64,2,opt,name=sum,proto3" json:"sum,omitempty"`                                             // Sum of all observations
	Buckets       []float64              `protobuf:"fixed64,3,rep,packed,name=buckets,proto3" json:"buckets,omitempty"`                              // Histogram buckets
	BucketCounts  []int64                `protobuf:"varint,4,rep,packed,name=bucket_counts,json=bucketCounts,proto3" json:"bucket_counts,omitempty"` // Count per bucket
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HistogramValue) Reset() {
	*x = HistogramValue{}
	mi := &file_proto_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HistogramValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HistogramValue) ProtoMessage() {}

func (x *HistogramValue) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HistogramValue.ProtoReflect.Descriptor instead.
func (*HistogramValue) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{4}
}

func (x *HistogramValue) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *HistogramValue) GetSum() float64 {
	if x != nil {
		return x.Sum
	}
	return 0
}

func (x *HistogramValue) GetBuckets() []float64 {
	if x != nil {
		return x.Buckets
	}
	return nil
}

func (x *HistogramValue) GetBucketCounts() []int64 {
	if x != nil {
		return x.BucketCounts
	}
	return nil
}

// Span data for distributed tracing
type SpanData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TraceId       string                 `protobuf:"bytes,1,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`                                                      // Trace ID
	SpanId        string                 `protobuf:"bytes,2,opt,name=span_id,json=spanId,proto3" json:"span_id,omitempty"`                                                         // Span ID
	ParentSpanId  string                 `protobuf:"bytes,3,opt,name=parent_span_id,json=parentSpanId,proto3" json:"parent_span_id,omitempty"`                                     // Parent span ID
	OperationName string                 `protobuf:"bytes,4,opt,name=operation_name,json=operationName,proto3" json:"operation_name,omitempty"`                                    // Operation name
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                // Span start time
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                      // Span end time
	DurationUs    int64                  `protobuf:"varint,7,opt,name=duration_us,json=durationUs,proto3" json:"duration_us,omitempty"`                                            // Duration in microseconds
	Tags          map[string]string      `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Span tags
	Logs          []*SpanLog             `protobuf:"bytes,9,rep,name=logs,proto3" json:"logs,omitempty"`                                                                           // Span logs
	Status        string                 `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`                                                                      // Span status (OK, ERROR, etc.)
	ServiceName   string                 `protobuf:"bytes,11,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`                                         // Service name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpanData) Reset() {
	*x = SpanData{}
	mi := &file_proto_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpanData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpanData) ProtoMessage() {}

func (x *SpanData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpanData.ProtoReflect.Descriptor instead.
func (*SpanData) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{5}
}

func (x *SpanData) GetTraceId() string {
	if x != nil {
		return x.TraceId
	}
	return ""
}

func (x *SpanData) GetSpanId() string {
	if x != nil {
		return x.SpanId
	}
	return ""
}

func (x *SpanData) GetParentSpanId() string {
	if x != nil {
		return x.ParentSpanId
	}
	return ""
}

func (x *SpanData) GetOperationName() string {
	if x != nil {
		return x.OperationName
	}
	return ""
}

func (x *SpanData) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *SpanData) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *SpanData) GetDurationUs() int64 {
	if x != nil {
		return x.DurationUs
	}
	return 0
}

func (x *SpanData) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *SpanData) GetLogs() []*SpanLog {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *SpanData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SpanData) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

// Span log entry
type SpanLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                     // Log timestamp
	Fields        map[string]string      `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Log fields
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpanLog) Reset() {
	*x = SpanLog{}
	mi := &file_proto_events_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpanLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpanLog) ProtoMessage() {}

func (x *SpanLog) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpanLog.ProtoReflect.Descriptor instead.
func (*SpanLog) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{6}
}

func (x *SpanLog) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *SpanLog) GetFields() map[string]string {
	if x != nil {
		return x.Fields
	}
	return nil
}

var File_proto_events_proto protoreflect.FileDescriptor

const file_proto_events_proto_rawDesc = "" +
	"\n" +
	"\x12proto/events.proto\x12\x06events\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\xd8\x03\n" +
	"\tEventData\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12\x18\n" +
	"\asubject\x18\x04 \x01(\tR\asubject\x12.\n" +
	"\x04time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12+\n" +
	"\x04data\x18\x06 \x01(\v2\x17.google.protobuf.StructR\x04data\x128\n" +
	"\aheaders\x18\a \x03(\v2\x1e.events.EventData.HeadersEntryR\aheaders\x12\x19\n" +
	"\btrace_id\x18\b \x01(\tR\atraceId\x12\x17\n" +
	"\aspan_id\x18\t \x01(\tR\x06spanId\x12*\n" +
	"\x11data_content_type\x18\n" +
	" \x01(\tR\x0fdataContentType\x12\x1f\n" +
	"\vdata_schema\x18\v \x01(\tR\n" +
	"dataSchema\x12!\n" +
	"\fspec_version\x18\f \x01(\tR\vspecVersion\x1a:\n" +
	"\fHeadersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf0\x02\n" +
	"\n" +
	"CloudEvent\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12!\n" +
	"\fspec_version\x18\x03 \x01(\tR\vspecVersion\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12B\n" +
	"\n" +
	"attributes\x18\x05 \x03(\v2\".events.CloudEvent.AttributesEntryR\n" +
	"attributes\x12!\n" +
	"\vbinary_data\x18\x06 \x01(\fH\x00R\n" +
	"binaryData\x12\x1d\n" +
	"\ttext_data\x18\a \x01(\tH\x00R\btextData\x126\n" +
	"\tjson_data\x18\b \x01(\v2\x17.google.protobuf.StructH\x00R\bjsonData\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\x06\n" +
	"\x04data\"\xac\x03\n" +
	"\bLogEntry\x12.\n" +
	"\x04time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12\x14\n" +
	"\x05level\x18\x02 \x01(\tR\x05level\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x19\n" +
	"\btrace_id\x18\x04 \x01(\tR\atraceId\x12\x17\n" +
	"\aspan_id\x18\x05 \x01(\tR\x06spanId\x12\x18\n" +
	"\aservice\x18\x06 \x01(\tR\aservice\x12\x19\n" +
	"\bevent_id\x18\a \x01(\tR\aeventId\x12\x1d\n" +
	"\n" +
	"event_type\x18\b \x01(\tR\teventType\x12\x1f\n" +
	"\vduration_ms\x18\t \x01(\x03R\n" +
	"durationMs\x12\x16\n" +
	"\x06source\x18\n" +
	" \x01(\tR\x06source\x12@\n" +
	"\n" +
	"attributes\x18\v \x03(\v2 .events.LogEntry.AttributesEntryR\n" +
	"attributes\x1a=\n" +
	"\x0fAttributesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa3\x03\n" +
	"\x0fMetricDataPoint\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x12\n" +
	"\x04unit\x18\x03 \x01(\tR\x04unit\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12;\n" +
	"\x06labels\x18\x05 \x03(\v2#.events.MetricDataPoint.LabelsEntryR\x06labels\x12!\n" +
	"\vgauge_value\x18\x06 \x01(\x01H\x00R\n" +
	"gaugeValue\x12%\n" +
	"\rcounter_value\x18\a \x01(\x03H\x00R\fcounterValue\x12A\n" +
	"\x0fhistogram_value\x18\b \x01(\v2\x16.events.HistogramValueH\x00R\x0ehistogramValue\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B\a\n" +
	"\x05value\"w\n" +
	"\x0eHistogramValue\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\x12\x10\n" +
	"\x03sum\x18\x02 \x01(\x01R\x03sum\x12\x18\n" +
	"\abuckets\x18\x03 \x03(\x01R\abuckets\x12#\n" +
	"\rbucket_counts\x18\x04 \x03(\x03R\fbucketCounts\"\xe7\x03\n" +
	"\bSpanData\x12\x19\n" +
	"\btrace_id\x18\x01 \x01(\tR\atraceId\x12\x17\n" +
	"\aspan_id\x18\x02 \x01(\tR\x06spanId\x12$\n" +
	"\x0eparent_span_id\x18\x03 \x01(\tR\fparentSpanId\x12%\n" +
	"\x0eoperation_name\x18\x04 \x01(\tR\roperationName\x129\n" +
	"\n" +
	"start_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x1f\n" +
	"\vduration_us\x18\a \x01(\x03R\n" +
	"durationUs\x12.\n" +
	"\x04tags\x18\b \x03(\v2\x1a.events.SpanData.TagsEntryR\x04tags\x12#\n" +
	"\x04logs\x18\t \x03(\v2\x0f.events.SpanLogR\x04logs\x12\x16\n" +
	"\x06status\x18\n" +
	" \x01(\tR\x06status\x12!\n" +
	"\fservice_name\x18\v \x01(\tR\vserviceName\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb3\x01\n" +
	"\aSpanLog\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x123\n" +
	"\x06fields\x18\x02 \x03(\v2\x1b.events.SpanLog.FieldsEntryR\x06fields\x1a9\n" +
	"\vFieldsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01B-Z+internal/events/observability;observabilityb\x06proto3"

var (
	file_proto_events_proto_rawDescOnce sync.Once
	file_proto_events_proto_rawDescData []byte
)

func file_proto_events_proto_rawDescGZIP() []byte {
	file_proto_events_proto_rawDescOnce.Do(func() {
		file_proto_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_events_proto_rawDesc), len(file_proto_events_proto_rawDesc)))
	})
	return file_proto_events_proto_rawDescData
}

var file_proto_events_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_events_proto_goTypes = []any{
	(*EventData)(nil),             // 0: events.EventData
	(*CloudEvent)(nil),            // 1: events.CloudEvent
	(*LogEntry)(nil),              // 2: events.LogEntry
	(*MetricDataPoint)(nil),       // 3: events.MetricDataPoint
	(*HistogramValue)(nil),        // 4: events.HistogramValue
	(*SpanData)(nil),              // 5: events.SpanData
	(*SpanLog)(nil),               // 6: events.SpanLog
	nil,                           // 7: events.EventData.HeadersEntry
	nil,                           // 8: events.CloudEvent.AttributesEntry
	nil,                           // 9: events.LogEntry.AttributesEntry
	nil,                           // 10: events.MetricDataPoint.LabelsEntry
	nil,                           // 11: events.SpanData.TagsEntry
	nil,                           // 12: events.SpanLog.FieldsEntry
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
	(*structpb.Struct)(nil),       // 14: google.protobuf.Struct
}
var file_proto_events_proto_depIdxs = []int32{
	13, // 0: events.EventData.time:type_name -> google.protobuf.Timestamp
	14, // 1: events.EventData.data:type_name -> google.protobuf.Struct
	7,  // 2: events.EventData.headers:type_name -> events.EventData.HeadersEntry
	8,  // 3: events.CloudEvent.attributes:type_name -> events.CloudEvent.AttributesEntry
	14, // 4: events.CloudEvent.json_data:type_name -> google.protobuf.Struct
	13, // 5: events.LogEntry.time:type_name -> google.protobuf.Timestamp
	9,  // 6: events.LogEntry.attributes:type_name -> events.LogEntry.AttributesEntry
	13, // 7: events.MetricDataPoint.timestamp:type_name -> google.protobuf.Timestamp
	10, // 8: events.MetricDataPoint.labels:type_name -> events.MetricDataPoint.LabelsEntry
	4,  // 9: events.MetricDataPoint.histogram_value:type_name -> events.HistogramValue
	13, // 10: events.SpanData.start_time:type_name -> google.protobuf.Timestamp
	13, // 11: events.SpanData.end_time:type_name -> google.protobuf.Timestamp
	11, // 12: events.SpanData.tags:type_name -> events.SpanData.TagsEntry
	6,  // 13: events.SpanData.logs:type_name -> events.SpanLog
	13, // 14: events.SpanLog.timestamp:type_name -> google.protobuf.Timestamp
	12, // 15: events.SpanLog.fields:type_name -> events.SpanLog.FieldsEntry
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_proto_events_proto_init() }
func file_proto_events_proto_init() {
	if File_proto_events_proto != nil {
		return
	}
	file_proto_events_proto_msgTypes[1].OneofWrappers = []any{
		(*CloudEvent_BinaryData)(nil),
		(*CloudEvent_TextData)(nil),
		(*CloudEvent_JsonData)(nil),
	}
	file_proto_events_proto_msgTypes[3].OneofWrappers = []any{
		(*MetricDataPoint_GaugeValue)(nil),
		(*MetricDataPoint_CounterValue)(nil),
		(*MetricDataPoint_HistogramValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_events_proto_rawDesc), len(file_proto_events_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_events_proto_goTypes,
		DependencyIndexes: file_proto_events_proto_depIdxs,
		MessageInfos:      file_proto_events_proto_msgTypes,
	}.Build()
	File_proto_events_proto = out.File
	file_proto_events_proto_goTypes = nil
	file_proto_events_proto_depIdxs = nil
}
